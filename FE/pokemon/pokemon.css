:root{
    --translateZ: calc(var(--item-width)*var(--item-number) /2 /3.14);
    --item-width: 340px;
    --item-number: 7;
    /* item-number을 늘린다면, 밑에도 추가해줘야함 */
    /* 빈복되는 걸 변수로 설정 */
}

#app{
    height: 100vh;
    width: 100vw;
    perspective: 1600px;
    /* 깊이감을 줌 */
}

.list-item{
    position: fixed;
    width: var(--item-width);
    height: 400px;
    padding: 0;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) rotateY(0deg);
    /* y축 즉, 세로축을 기준으로 이미지가 빙글빙글 돌아감
    - 제자리에서 빙글 돌아감 */
    transform-style: preserve-3d;
    /* 포지션을.. 원통으로 동그랗게 만들기 위해 축에서 좀 떨어뜨리기 위해
    z축을 줘야함 - z축(3차원)을 주기 위해서는? 부모에 transform-style을 주기!*/
    transition: 0.3s;
}

.list-item li{
    position: absolute;
    /* 부모의 포지션인 픽스를 기준! */
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    /* 부모에서 이미 넓이와 높이를 지정했으니까 그냥 100% */
    border:1px solid #bdbdbd;
    border-radius: 10px;
    list-style: none;
    backface-visibility: hidden;
}
/* 원의 반지름 공식 : 원의 둘레/2 /3.14 */
.list-item li:nth-child(1){
    transform: rotateY(0) translateZ(var(--translateZ));
}

.list-item li:nth-child(2){
    transform: rotateY(calc(360deg/7)) translateZ(var(--translateZ));
}

.list-item li:nth-child(3){
    transform: rotateY(calc(360deg/var(--item-number)*2)) translateZ(var(--translateZ));
}

.list-item li:nth-child(4){
    transform: rotateY(calc(360deg/var(--item-number)*3)) translateZ(var(--translateZ));
}

.list-item li:nth-child(5){
    transform: rotateY(calc(360deg/var(--item-number)*4)) translateZ(var(--translateZ));
}

.list-item li:nth-child(6){
    transform: rotateY(calc(360deg/var(--item-number)*5)) translateZ(var(--translateZ));
}

.list-item li:nth-child(7){
    transform: rotateY(calc(360deg/var(--item-number)*6)) translateZ(var(--translateZ));
}

.list-item img{
    /* 이미지의 크기를 부모의 크기만큼 맞출 수 있는- 좌우 비율을 유지하며 크기를 커지게! */
    object-fit: contain;
    width: 100%;
    height: 100%;
}
